@page "/"
@using MySqlManager.Services
@using MySqlManager.Dtos
@inject MySqlManagerService MySqlManagerService
@inject SettingsService SettingsService
@attribute [StreamRendering]

@if (_serverInformation != null)
{
    <div class="card">
        <div class="card-header">
            <i class="nf nf-cod-server"></i> Server Information
        </div>
        <div class="card-body">
            Server Type: @_serverInformation.ServerType<br/>
            Version: @_serverInformation.Version <br/>
            Protocol Version: @_serverInformation.ProtocolVersion <br/>
            OS: @_serverInformation.VersionCompileOs
        </div>
    </div>
}
else
{
    if (_loading)
    {
        <text>Loading...</text>
    }
    else
    {
        if (string.IsNullOrEmpty(SettingsService.Settings?.ConnectionString))
        {
            <div class="alert alert-warning">Please configure your connection string!</div>
            
            <div class="mb-3">
                <label for="host" class="form-label">Host</label>
                <input id="host" class="form-control" type="text" required />
            </div>
            <div class="mb-3">
                <label for="port" class="form-label">Port</label>
                <input id="port" class="form-control" type="text" required />
            </div>
            <div class="mb-3">
                <label for="user" class="form-label">User</label>
                <input id="user" class="form-control" type="text" required />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input id="password" class="form-control" type="text" />
            </div>
            <button class="btn btn-primary">Save Configuration</button>
        }
        else
        {
            // No connection possible -> change settings or something
            <div class="alert alert-danger">No server connection possible. Please make sure your server is running.</div>
        }
    }
}


@code {

    private ServerInformationDto? _serverInformation;
    private bool _loading = true;

    protected override async Task OnInitializedAsync()
    {
        _serverInformation = null;
        await LoadServerVersion();
    }

    private async Task LoadServerVersion()
    {
        if (await MySqlManagerService.IsConnectionPossible())
        {
            Console.WriteLine("Loading server version...");
            _serverInformation = await MySqlManagerService.GetServerVersion();
            //await InvokeAsync(StateHasChanged);
            Console.WriteLine("Loaded. Result: " + _serverInformation);
        }
        else
        {
            _loading = false;
        }
    }

}