@page "/database/{Database}/table/{Table}"
@using System.Data
@using System.Runtime.InteropServices
@using MySqlManager.Components.Layout
@using MySqlManager.Services
@using MySqlManager.Dtos
@inject MySqlManagerService MySqlManagerService
@attribute [StreamRendering]

<h1>Database Overview</h1>
Parameter: @Database / @Table

@if (_tableData == null)
{
    <div>Loading...</div>
}
else
{
    <p class="mt-4">Showing @_tableData.Offset-@(_tableData.Offset + _tableData.Limit) of @_tableData.ResultCount Results</p>
    <div class="table-responsive">
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    @foreach (var column in _tableData.DataTable.Columns)
                    {
                    <th>@column.ToString()</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in _tableData.DataTable.Rows)
                {
                var c = row as DataRow;
                <tr>
                    @if (c?.ItemArray != null)
                    {
                    foreach (var item in c.ItemArray)
                    {
                    <td>@item?.ToString()</td>
                    }
                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private RunSqlResult? _tableData;

    [Parameter] public string? Database { get; set; }

    [Parameter] public string? Table { get; set; }
    
    [CascadingParameter] public MainLayout? Layout { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Layout?.SetTopRowForTableView(Database, Table, "browse");
        _tableData = null;
        Console.WriteLine("Getting table contents...");
        _tableData = await MySqlManagerService.RunSql(Database, $"SELECT * FROM {Table}");
    }

}