@using MySqlManager.Services
@using MySqlManager.Dtos
@inject MySqlManagerService MySqlManagerService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MySqlManager</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <i class="nf nf-fa-home"></i> Dashboard
            </NavLink>
        </div>
        
        @if (_databaseList != null)
        {
            foreach (var item in _databaseList)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"/database/{item.Name}")">
                        <i class="nf nf-fa-database"></i> @item.Name
                    </NavLink>
                    <NavLink class="nav-link-sub" href="@($"/database/{item.Name}/new/table")">
                        <i class="nf nf-fa-plus"></i> New Table
                    </NavLink>
                    @foreach (var table in item.Tables)
                    {
                        <NavLink class="nav-link-sub" href="@($"/database/{item.Name}/table/{table.Name}")">
                            <i class="nf nf-fa-list_ul"></i> @table.Name
                        </NavLink>
                    }
                </div>                
            }
        }
    </nav>
</div>

@code {

    private List<DatabaseInformation>? _databaseList;
    
    protected override async Task OnInitializedAsync()
    {
        _databaseList = null;
        await LoadDatabaseList();
    }

    private async Task LoadDatabaseList()
    {
        if (await MySqlManagerService.IsConnectionPossible())
        {
            Console.WriteLine("Loading database list...");
            _databaseList = await MySqlManagerService.GetDatabaseList(false);
        }
    }

}